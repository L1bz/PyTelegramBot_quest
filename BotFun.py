import telebot
import sqlite3
from telebot import types
from config import BOT_TOKEN
from connectDB import DB



bot=telebot.TeleBot(BOT_TOKEN)


class meth():
	def __init__(self):

		self.counter = 0
		self.maxcounter = 0
		self.status = False
		self.quest = 1
		self.categ = ["–°–∫–æ—Ä–æ—Å—Ç—å –æ—Ç–≤–µ—Ç–æ–≤", "–ö–∞—á–µ—Å—Ç–≤–æ", "–û–±—Ä–∞—â–µ–Ω–∏–µ —Å –∫–ª–∏–µ–Ω—Ç–æ–º", "–í–ø–µ—á–∞—Ç–ª–µ–Ω–∏–µ –æ—Ç –æ–±—â–µ–Ω–∏—è","–ò—Ç–æ–≥"]

	
	def start(self, message):

		DB.startDB(message)

		markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
		item1 = types.KeyboardButton("üñä –ù–∞–ø–∏—Å–∞—Ç—å –æ—Ç–∑—ã–≤")
		item2 = types.KeyboardButton("üí¨ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—Ç–∑—ã–≤—ã")
		markup.add(item1, item2,)

		bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç {0.first_name} –Ø –±–æ—Ç TestBot, –º–æ–≥—É –ø–æ–º–æ—á –∫–æ–≥–¥–∞ –Ω–∞–ø–∏—à–µ—à—å! \033[1m–ñ–∏—Ä–Ω—ã–π —Ç–µ–∫—Å—Ç\033".format(message.from_user),reply_markup=markup)

	
	def feedback(self, message):

		user_i=message.chat.id

		if message.text == 'üñä –ù–∞–ø–∏—Å–∞—Ç—å –æ—Ç–∑—ã–≤' or message.text == 'üñä –ò–∑–º–µ–Ω–∏—Ç—å –æ—Ç–∑—ã–≤':
			self.status = True
			markup = types.InlineKeyboardMarkup()
			btm1 = types.InlineKeyboardButton("‚≠ê", callback_data='‚≠ê')
			btm2 = types.InlineKeyboardButton("‚≠ê‚≠ê", callback_data='‚≠ê‚≠ê')
			btm3 = types.InlineKeyboardButton("‚≠ê‚≠ê‚≠ê", callback_data='‚≠ê‚≠ê‚≠ê')
			btm4 = types.InlineKeyboardButton("‚≠ê‚≠ê‚≠ê‚≠ê", callback_data='‚≠ê‚≠ê‚≠ê‚≠ê')
			btm5 = types.InlineKeyboardButton("‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê", callback_data='‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê')
			markup.add(btm1, btm2, btm3,btm4,btm5)

			bot.send_message(message.chat.id, self.categ[self.quest-1], reply_markup=markup)

		if message.text == 'üí¨ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—Ç–∑—ã–≤—ã':

			self.status = False

			a = DB.GetLenFeedbackDB()
			b = DB.GetFeedbackDB()

			self.maxcounter = len(a)

			markup = types.InlineKeyboardMarkup()
			button1 = types.InlineKeyboardButton("–°–ª–µ–¥—É—à–∏–π –æ—Ç–∑—ã–≤ =>", callback_data='12')
			markup.add(button1) 

			bot.send_message(message.chat.id, DB.GetStarFeedbackDB(self.counter, self.maxcounter, a), parse_mode = "markdown", reply_markup=markup)  

		if self.status==True and message.text != 'üí¨ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—Ç–∑—ã–≤—ã' and message.text !='üñä –ù–∞–ø–∏—Å–∞—Ç—å –æ—Ç–∑—ã–≤' and message.text != 'üñä –ò–∑–º–µ–Ω–∏—Ç—å –æ—Ç–∑—ã–≤':
			
			DB.SetFeedbackDB(message)

			markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
			item1 = types.KeyboardButton("üñä –ò–∑–º–µ–Ω–∏—Ç—å –æ—Ç–∑—ã–≤")
			item2 = types.KeyboardButton("üí¨ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—Ç–∑—ã–≤—ã")
			markup.add(item1, item2,)

			bot.send_message(message.chat.id, "–í–∞—à –æ—Ç–∑—ã–≤ –≤–¥–æ—Ö–Ω–æ–≤–ª—è–µ—Ç –Ω–∞—Å –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å —Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤–æ–≤–∞—Ç—å—Å—è!".format(message.from_user),reply_markup=markup)
	
	
	def anws(self, call):

		markup = types.InlineKeyboardMarkup()
		btm1 = types.InlineKeyboardButton("‚≠ê", callback_data='‚≠ê')
		btm2 = types.InlineKeyboardButton("‚≠ê‚≠ê", callback_data='‚≠ê‚≠ê')
		btm3 = types.InlineKeyboardButton("‚≠ê‚≠ê‚≠ê", callback_data='‚≠ê‚≠ê‚≠ê')
		btm4 = types.InlineKeyboardButton("‚≠ê‚≠ê‚≠ê‚≠ê", callback_data='‚≠ê‚≠ê‚≠ê‚≠ê')
		btm5 = types.InlineKeyboardButton("‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê", callback_data='‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê')
		markup.add(btm1, btm2, btm3,btm4,btm5)

		bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.id, text=self.categ[self.quest-1], reply_markup=markup)
	
	
	def callback_anws(self, call):

		a = DB.GetLenFeedbackDB()

		self.maxcounter = len(a)

		if call.message:
			if call.data == '12':
				self.counter+=1

				if self.counter == self.maxcounter-1:
					markup = types.InlineKeyboardMarkup()
					button2 = types.InlineKeyboardButton("<= –ü—Ä–µ–¥—ã–¥—É—â–∏–π –æ—Ç–∑—ã–≤", callback_data='13')
					markup.add(button2)

					bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.id, text=DB.GetStarFeedbackDB(self.counter, self.maxcounter, a), parse_mode = "markdown", reply_markup=markup) 

				else:
					markup = types.InlineKeyboardMarkup()
					button1 = types.InlineKeyboardButton("–°–ª–µ–¥—É—à–∏–π –æ—Ç–∑—ã–≤ =>", callback_data='12')
					button2 = types.InlineKeyboardButton("<= –ü—Ä–µ–¥—ã–¥—É—â–∏–π –æ—Ç–∑—ã–≤", callback_data='13')
					markup.add(button2, button1) 

					
					bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.id, text=DB.GetStarFeedbackDB(self.counter, self.maxcounter, a), parse_mode = "markdown", reply_markup=markup) 

			elif call.data == '13':
				self.counter-=1

				if self.counter == 0:
					markup = types.InlineKeyboardMarkup()
					button1 = types.InlineKeyboardButton("–°–ª–µ–¥—É—à–∏–π –æ—Ç–∑—ã–≤ =>", callback_data='12')
					markup.add(button1) 

					bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.id, text=DB.GetStarFeedbackDB(self.counter, self.maxcounter, a), parse_mode = "markdown", reply_markup=markup) 

				else:
					markup = types.InlineKeyboardMarkup()
					button1 = types.InlineKeyboardButton("–°–ª–µ–¥—É—à–∏–π –æ—Ç–∑—ã–≤ =>", callback_data='12')
					button2 = types.InlineKeyboardButton("<= –ü—Ä–µ–¥—ã–¥—É—â–∏–π –æ—Ç–∑—ã–≤", callback_data='13')
					markup.add(button2, button1) 

					bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.id, text=DB.GetStarFeedbackDB(self.counter, self.maxcounter, a), parse_mode = "markdown", reply_markup=markup) 

			elif "‚≠ê" in call.data:
				DB.quest(call.data, self.quest,call.message.chat.id)
				if self.quest < 5:
					self.quest+=1
					meth.anws(self, call)
				else:
					self.quest = 1
					self.status = True
					bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.id, text="asdf")